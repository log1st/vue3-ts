@import "~@/assets/utils";

.container {
  display: grid;
  grid-template-columns: 895fr 315fr;
  grid-gap: rem(35px);
}

.form {
  display: flex;
  flex-direction: column;
}

.fields {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: rem(10px);
  flex-shrink: 0;
}

.field {
  [data-role="up-label"] {
    font-size: rem(14px) !important;
    + * {
      margin-top: rem(4px) !important;
    }
  }

  [data-role="label"],
  [data-role="trigger"] label {
    padding-top: rem(7px) !important;
    padding-bottom: rem(7px) !important;
  }
}

.editor {
  height: 0;
  flex-grow: 1;
  margin-top: rem(10px);

  display: flex;
  flex-direction: column;

  > * {
    height: 0;
    flex-grow: 1;
  }
}

.side {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.actions {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.action {
  height: rem(40px);
  padding: 0 rem(20px);

  align-self: normal;

  &:not(:first-child) {
    margin-top: rem(20px);
  }
}

.variablesWrapper {
  flex-grow: 1;
  height: 0;
  align-self: normal;
  overflow-y: auto;

  margin-top: rem(24px);

  background: rgba(var(--table-bg), .2);
  box-shadow:
          inset 0 0 0 rem(.5px) rgba(var(--table-bg), .6),
          inset rem(-30px) rem(-30px) rem(30px) rgba(var(--table-bg), .1);
  border-radius: rem(10px);

  padding: rem(30px) rem(40px);
}

.group {
  @include caption(true);
  color: rgba(var(--btn-color), 1);

  &:not(:first-child) {
    margin-top: rem(30px);
  }
}

.variables {
  margin-top: rem(20px);
}

.variable {
  display: flex;
  align-items: center;
  cursor: pointer;

  &:not(:first-child) {
    margin-top: rem(20px);
  }
}

.variableCheck {
  height: rem(16px);
  width: rem(16px);
  flex-shrink: 0;
  background: rgba(var(--lightblue-2), 1);
  border-radius: rem(5px);
  color: rgba(var(--gray-3), 1);
  padding: rem(2px);
}

.variableName {
  margin-left: rem(15px);
  flex-grow: 1;
  display: block;
  color: rgba(var(--table-color), 1);
  word-break: break-word;
  text-align: left;
}

.variableHint {
  margin-left: rem(15px);
  flex-shrink: 0;
  height: rem(15px);
  width: rem(15px);
  color: rgba(var(--blue-3), 1);
}

.error {
  color: rgba(var(--red), 1);

  margin-top: rem(3px);

  @include input;

  div {
    &:not(:first-child) {
      margin-top: 2px;
    }
  }
}

.addType {
  align-self: flex-end;
  justify-self: flex-end;
  height: rem(47px);
  padding: 0 rem(10px);
}
